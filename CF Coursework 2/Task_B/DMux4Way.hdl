// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // Put your code here:

    //4 Way demultiplexer requires 3 demultiplexers, which includes 1 input line, 2 selectors and 4 outputs
    //Binary-tree like construction is 1-2, from 1 to 2

    DMux(in=in, sel=sel[1], a=out1, b=out2); //First demultiplexer

    DMux(in=out1, sel=sel[0], a=a, b=b); //Follwing 2 demultiplexers
    DMux(in=out2, sel=sel[0], a=c, b=d);
}